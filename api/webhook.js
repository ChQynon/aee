// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –¥–ª—è Telegram
const TelegramBot = require('node-telegram-bot-api');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.TELEGRAM_BOT_TOKEN || '7417777601:AAGy92M0pjoizRHILNT7d72xMNf8a0BkKK8';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–æ—Ç–∞
const {
  ADMIN_IDS,
  GROUP_CHAT_ID,
  GROUP_LINK,
  userStates,
  userForms,
  pendingForms,
  processedForms,
  STATES,
  isAdmin
} = require('../bot');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ webhook
const bot = new TelegramBot(token);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –∑–∞–ø—Ä–æ—Å–æ–≤
module.exports = async (req, res) => {
  // –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ GET-–∑–∞–ø—Ä–æ—Å–∞
  if (req.method === 'GET') {
    return res.status(200).json({ status: 'Bot is running' });
  }
  
  if (req.method === 'POST') {
    try {
      const update = req.body;
      console.log('–ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram:', JSON.stringify(update).slice(0, 100) + '...');
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      if (update.message && update.message.text) {
        const chatId = update.message.chat.id;
        const text = update.message.text;
        const userId = update.message.from.id;
        
        console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${text}`);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
        if (text === '/start') {
          if (isAdmin(userId)) {
            await bot.sendMessage(chatId, 
              "–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! üëã\n\n" +
              "–Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
              "–ñ–¥–∏—Ç–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —è –±—É–¥—É –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∏—Ö –≤–∞–º.\n\n" +
              "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" +
              "/list - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
              "/history_accepted - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
              "/history_rejected - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç"
            );
          } else {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –Ω–∏–∫–∞"
            userStates[chatId] = STATES.AWAITING_NAME;
            userForms[chatId] = {}; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—É—é –∞–Ω–∫–µ—Ç—É
            
            await bot.sendMessage(chatId, 
              "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
              "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã.\n\n" +
              "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:");
          }
        }
        
        // –î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        else if (userStates[chatId]) {
          // –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞
          require('../bot').handleTextMessage(chatId, text, userId);
        }
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–Ω–æ–ø–∫–∏)
      else if (update.callback_query) {
        // –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞
        require('../bot').handleCallbackQuery(update.callback_query);
      }
      
      return res.status(200).send('OK');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:', error);
      return res.status(500).json({ error: String(error) });
    }
  }
  
  return res.status(405).json({ error: 'Method not allowed' });
}; 