// –ü–æ–ª–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –¥–ª—è Telegram
const TelegramBot = require('node-telegram-bot-api');
const token = '7417777601:AAGy92M0pjoizRHILNT7d72xMNf8a0BkKK8';

// ID –∞–¥–º–∏–Ω–æ–≤
const ADMIN_IDS = [
    7683124601,
    1971986164,
    1663401570,
    6844219237,
    1536993655,
    718910310
];

// ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞
const GROUP_CHAT_ID = -1002081050841;

// –ì—Ä—É–ø–ø–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
const GROUP_LINK = 'https://t.me/+mjIfXRUDx19iOGQy';

// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = {};
const userForms = {};
const pendingForms = {};
const processedForms = {
    accepted: [],
    rejected: []
};

// –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
const STATES = {
    IDLE: 'IDLE',
    AWAITING_NAME: 'AWAITING_NAME',
    AWAITING_AGE: 'AWAITING_AGE',
    AWAITING_TIMEZONE: 'AWAITING_TIMEZONE',
    AWAITING_ACTIVITY: 'AWAITING_ACTIVITY',
    AWAITING_WHY_US: 'AWAITING_WHY_US',
    AWAITING_MINECRAFT_VERSION: 'AWAITING_MINECRAFT_VERSION',
    AWAITING_MINECRAFT_TYPE: 'AWAITING_MINECRAFT_TYPE',
    AWAITING_SERVER_ACTIVITY: 'AWAITING_SERVER_ACTIVITY',
    AWAITING_CHAT_ACTIVITY: 'AWAITING_CHAT_ACTIVITY',
    AWAITING_OTHER_HOUSES: 'AWAITING_OTHER_HOUSES',
    AWAITING_CONFIRMATION: 'AWAITING_CONFIRMATION'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
function isAdmin(userId) {
    return ADMIN_IDS.includes(Number(userId));
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±-—Ö—É–∫–∞ –¥–ª—è Vercel
module.exports = async (req, res) => {
  try {
    // GET-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
    if (req.method === 'GET') {
      return res.status(200).json({ status: 'Bot is running' });
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram
    if (req.method === 'POST') {
      const update = req.body;
      console.log('WEBHOOK:', JSON.stringify(update).slice(0, 200));
      
      // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
      const bot = new TelegramBot(token);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      if (update.message && update.message.text) {
        const chatId = update.message.chat.id;
        const text = update.message.text;
        const userId = update.message.from.id;
        
        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${text} –æ—Ç ${userId} (${chatId})`);
        
        // –ö–æ–º–∞–Ω–¥–∞ /start
        if (text === '/start') {
          if (isAdmin(userId)) {
            await bot.sendMessage(chatId, 
              "–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! üëã\n\n" +
              "–Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
              "–ñ–¥–∏—Ç–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —è –±—É–¥—É –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∏—Ö –≤–∞–º.\n\n" +
              "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" +
              "/list - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
              "/history_accepted - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
              "/history_rejected - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç"
            );
          } else {
            userStates[chatId] = STATES.AWAITING_NAME;
            userForms[chatId] = {};
            
            await bot.sendMessage(chatId, 
              "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
              "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã.\n\n" +
              "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:");
          }
        }
        // –ö–æ–º–∞–Ω–¥–∞ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
        else if (text === '/cancel') {
          if (userStates[chatId]) {
            userStates[chatId] = STATES.IDLE;
            delete userForms[chatId];
            
            await bot.sendMessage(chatId, "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ. –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start");
          } else {
            await bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –¥–ª—è –æ—Ç–º–µ–Ω—ã.");
          }
        }
        // –ö–æ–º–∞–Ω–¥–∞ /list –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        else if (text === '/list' && isAdmin(userId)) {
          const pendingFormsCount = Object.keys(pendingForms).length;
          
          if (pendingFormsCount === 0) {
            await bot.sendMessage(chatId, "–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç.");
            return;
          }
          
          let message = `üìã –°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç (${pendingFormsCount}):\n\n`;
          
          for (const [userId, formData] of Object.entries(pendingForms)) {
            const username = formData.userData.username;
            const form = formData.userData.form;
            
            message += `üë§ @${username} (ID: ${userId})\n`;
            message += `üìù –ò–º—è –∏ –Ω–∏–∫: ${form.name}\n`;
            message += `üîπ –í–æ–∑—Ä–∞—Å—Ç: ${form.age}\n\n`;
          }
          
          message += "–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—É—é –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /view_[ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è], –Ω–∞–ø—Ä–∏–º–µ—Ä: /view_12345678";
          
          await bot.sendMessage(chatId, message);
        }
        // –î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞
        else if (text === '/history_accepted' && isAdmin(userId)) {
          // ... –∫–æ–¥ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç ...
          await bot.sendMessage(chatId, "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏");
        }
        else if (text === '/history_rejected' && isAdmin(userId)) {
          // ... –∫–æ–¥ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç ...
          await bot.sendMessage(chatId, "–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏");
        }
        // –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç—ã /view_ID
        else if (text.startsWith('/view_') && isAdmin(userId)) {
          const targetUserId = text.split('_')[1];
          
          if (!pendingForms[targetUserId]) {
            await bot.sendMessage(chatId, "–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.");
            return;
          }
          
          const { userData } = pendingForms[targetUserId];
          const username = userData.username;
          const form = userData.form;
          
          const formText = 
          `–ê–ù–ö–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (ID: ${targetUserId}):

–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username}

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}`;
          
          const options = {
            reply_markup: {
              inline_keyboard: [
                [
                  { text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ö–∞—É—Å ‚úÖ', callback_data: `accept_${targetUserId}` },
                  { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${targetUserId}` }
                ]
              ]
            }
          };
          
          await bot.sendMessage(chatId, formText, options);
        }
        // –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã)
        else if (userStates[chatId]) {
          await handleTextMessage(bot, chatId, text, userId);
        }
      }
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
      else if (update.callback_query) {
        const callbackQuery = update.callback_query;
        await handleCallbackQuery(bot, callbackQuery);
      }
      
      return res.status(200).send('OK');
    }
    
    return res.status(405).json({ error: 'Method not allowed' });
    
  } catch (error) {
    console.error('–û–®–ò–ë–ö–ê:', error);
    return res.status(500).json({
      error: String(error),
      stack: error.stack
    });
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleTextMessage(bot, chatId, text, userId) {
  try {
    switch (userStates[chatId]) {
      case STATES.AWAITING_NAME:
        userForms[chatId].name = text;
        userStates[chatId] = STATES.AWAITING_AGE;
        await bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:");
        break;
        
      case STATES.AWAITING_AGE:
        if (text.includes('11') || text.includes('10') || text.includes('9') || text.includes('8')) {
          await bot.sendMessage(chatId, 
            "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ –Ω–∞—à —Ö–∞—É—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ –æ—Ç 12 –ª–µ—Ç. " +
            "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –∫–æ–≥–¥–∞ –ø–æ–¥—Ä–∞—Å—Ç–µ—à—å!"
          );
          userStates[chatId] = STATES.IDLE;
          delete userForms[chatId];
          return;
        }
        
        userForms[chatId].age = text;
        userStates[chatId] = STATES.AWAITING_TIMEZONE;
        await bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–°–ö, –ú–°–ö+1 –∏ —Ç.–¥.):");
        break;
        
      case STATES.AWAITING_TIMEZONE:
        userForms[chatId].timezone = text;
        userStates[chatId] = STATES.AWAITING_ACTIVITY;
        await bot.sendMessage(chatId, "üçÇ –ö–∞–∫–æ–π —É —Ç–µ–±—è –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤ (–∫–æ–≥–¥–∞ –æ–±—ã—á–Ω–æ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –∏–≥—Ä–µ):");
        break;
        
      case STATES.AWAITING_ACTIVITY:
        userForms[chatId].activity = text;
        userStates[chatId] = STATES.AWAITING_WHY_US;
        await bot.sendMessage(chatId, "üçÇ –ü–æ—á–µ–º—É —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å:");
        break;
        
      case STATES.AWAITING_WHY_US:
        userForms[chatId].why_us = text;
        userStates[chatId] = STATES.AWAITING_MINECRAFT_VERSION;
        await bot.sendMessage(chatId, "What version of Minecraft do you play?");
        break;
        
      case STATES.AWAITING_MINECRAFT_VERSION:
        userForms[chatId].minecraft_version = text;
        userStates[chatId] = STATES.AWAITING_MINECRAFT_TYPE;
        await bot.sendMessage(chatId, "What type of Minecraft do you play? (Java or Bedrock)");
        break;
        
      case STATES.AWAITING_MINECRAFT_TYPE:
        userForms[chatId].minecraft_type = text;
        
        if (text.toLowerCase().includes('bedrock')) {
          await bot.sendMessage(chatId, 
            "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ –Ω–∞—à —Ö–∞—É—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ Java-–≤–µ—Ä—Å–∏–∏. " +
            "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–π–¥–µ—à—å –Ω–∞ Java-–≤–µ—Ä—Å–∏—é Minecraft!"
          );
          userStates[chatId] = STATES.IDLE;
          delete userForms[chatId];
          return;
        }
        
        userStates[chatId] = STATES.AWAITING_SERVER_ACTIVITY;
        await bot.sendMessage(chatId, "üçÇ –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö:");
        break;
        
      case STATES.AWAITING_SERVER_ACTIVITY:
        userForms[chatId].server_activity = text;
        userStates[chatId] = STATES.AWAITING_CHAT_ACTIVITY;
        await bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Å–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º(–æ–π) –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é):");
        break;
        
      case STATES.AWAITING_CHAT_ACTIVITY:
        userForms[chatId].chat_activity = text;
        userStates[chatId] = STATES.AWAITING_OTHER_HOUSES;
        await bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö:");
        break;
        
      case STATES.AWAITING_OTHER_HOUSES:
        userForms[chatId].other_houses = text;
        userStates[chatId] = STATES.AWAITING_CONFIRMATION;
        
        const form = userForms[chatId];
        const formText = 
          `–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}

–í—Å—ë –≤–µ—Ä–Ω–æ? –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ?`;
        
        const options = {
          reply_markup: {
            inline_keyboard: [
              [
                { text: '–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úÖ', callback_data: 'confirm' },
                { text: '–ù–µ—Ç, –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ ‚ùå', callback_data: 'restart' }
              ]
            ]
          }
        };
        
        await bot.sendMessage(chatId, formText, options);
        break;
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.");
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–Ω–æ–ø–æ–∫)
async function handleCallbackQuery(bot, callbackQuery) {
  try {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;
    const userId = callbackQuery.from.id;
    
    if (data === 'confirm' && userStates[chatId] === STATES.AWAITING_CONFIRMATION) {
      const username = callbackQuery.from.username || "–±–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã
      const form = userForms[chatId];
      const formText = 
      `–ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê –í –•–ê–£–° SUNSET!

–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username} (ID: ${userId})

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}`;
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–π –∞–Ω–∫–µ—Ç–µ
      for (const adminId of ADMIN_IDS) {
        try {
          await bot.sendMessage(adminId, 
            "üì¨ –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –≤ —Ö–∞—É—Å Sunset!\n" +
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç.");
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
      for (const adminId of ADMIN_IDS) {
        try {
          const adminMsg = await bot.sendMessage(adminId, formText, {
            reply_markup: {
              inline_keyboard: [
                [
                  { text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ö–∞—É—Å ‚úÖ', callback_data: `accept_${userId}` },
                  { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${userId}` }
                ]
              ]
            }
          });
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–¥–º–∏–Ω–∞, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏
          if (!pendingForms[userId]) {
            pendingForms[userId] = {
              adminMessages: {},
              userData: {
                username,
                form
              }
            };
          }
          
          pendingForms[userId].adminMessages[adminId] = {
            chat_id: adminId,
            message_id: adminMsg.message_id
          };
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
      const options = {
        reply_markup: {
          inline_keyboard: [
            [{ text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–∞—Ç—É Sunset', url: GROUP_LINK }]
          ]
        }
      };
      
      await bot.editMessageText(
        "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º.\n\n" +
        "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –≤ –Ω–∞—à —á–∞—Ç–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ! –ë–µ–∑ –∑–∞—è–≤–∫–∏ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.", 
        {
          chat_id: chatId,
          message_id: callbackQuery.message.message_id,
          reply_markup: options.reply_markup
        }
      );
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      userStates[chatId] = STATES.IDLE;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∞—Ç ID –¥–ª—è –±—É–¥—É—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      if (pendingForms[userId]) {
        pendingForms[userId].userChatId = chatId;
      }
    } 
    else if (data === 'restart') {
      userStates[chatId] = STATES.AWAITING_NAME;
      userForms[chatId] = {};
      
      await bot.editMessageText(
        "–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:", 
        {
          chat_id: chatId,
          message_id: callbackQuery.message.message_id
        }
      );
    }
    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    else if (data.startsWith('accept_') || data.startsWith('reject_')) {
      await bot.answerCallbackQuery(callbackQuery.id, { 
        text: "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.", 
        show_alert: true 
      });
    }
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback_query, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–æ–ø–∫–∏
    await bot.answerCallbackQuery(callbackQuery.id);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback_query:", error);
    await bot.answerCallbackQuery(callbackQuery.id, { 
      text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", 
      show_alert: true 
    });
  }
} 