const TelegramBot = require('node-telegram-bot-api');

const token = process.env.TELEGRAM_BOT_TOKEN || '7417777601:AAGy92M0pjoizRHILNT7d72xMNf8a0BkKK8';

const ADMIN_IDS = [
    7683124601,
    1971986164,
    1663401570,
    6844219237,
    1536993655,
    718910310
];

const GROUP_CHAT_ID = -1002081050841;

const GROUP_LINK = 'https://t.me/+mjIfXRUDx19iOGQy';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
let bot;
let BOT_ID = null;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ —Å—Ä–µ–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –Ω–∞ Vercel
if (process.env.VERCEL_URL) {
    // –í —Å—Ä–µ–¥–µ Vercel –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook
    const webhookUrl = `https://${process.env.VERCEL_URL}/api/webhook`;
    bot = new TelegramBot(token, {
        webhook: {
            url: webhookUrl,
            maxConnections: 40
        }
    });
    console.log(`–ó–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ webhook: ${webhookUrl}`);
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
    bot.setWebHook(webhookUrl).then(() => {
        console.log('Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    }).catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:', error);
    });
} else {
    // –í –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º long polling
    bot = new TelegramBot(token, { polling: true });
    console.log('–ó–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ long polling');
}

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try {
    bot.getMe().then(botInfo => {
        BOT_ID = botInfo.id;
        console.log(`–ë–æ—Ç ${botInfo.username} (ID: ${BOT_ID}) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!`);
    }).catch(error => {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: ${error}`);
    });
} catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:', error);
}

const userStates = {};
const userForms = {};
const pendingForms = {};
const processedForms = {
    accepted: [],
    rejected: []
};

const STATES = {
    IDLE: 'IDLE',
    AWAITING_NAME: 'AWAITING_NAME',
    AWAITING_AGE: 'AWAITING_AGE',
    AWAITING_TIMEZONE: 'AWAITING_TIMEZONE',
    AWAITING_ACTIVITY: 'AWAITING_ACTIVITY',
    AWAITING_WHY_US: 'AWAITING_WHY_US',
    AWAITING_MINECRAFT_VERSION: 'AWAITING_MINECRAFT_VERSION',
    AWAITING_MINECRAFT_TYPE: 'AWAITING_MINECRAFT_TYPE',
    AWAITING_SERVER_ACTIVITY: 'AWAITING_SERVER_ACTIVITY',
    AWAITING_CHAT_ACTIVITY: 'AWAITING_CHAT_ACTIVITY',
    AWAITING_OTHER_HOUSES: 'AWAITING_OTHER_HOUSES',
    AWAITING_CONFIRMATION: 'AWAITING_CONFIRMATION'
};

function isAdmin(userId) {
    return ADMIN_IDS.includes(userId);
}

bot.on('chat_join_request', async (request) => {
    const chatId = request.chat.id;
    const userId = request.from.id;
    const username = request.from.username || `ID: ${userId}`;
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} (ID: ${userId})`);
    
    for (const adminId of ADMIN_IDS) {
        try {
            await bot.sendMessage(
                adminId,
                `üì£ –ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} (ID: ${userId}).\n\n` +
                `–ï—Å–ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∞–Ω–∫–µ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –µ—ë –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç (/list)`
            );
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
        }
    }
});

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (isAdmin(userId)) {
        bot.sendMessage(chatId, 
            "–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! üëã\n\n" +
            "–Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
            "–ñ–¥–∏—Ç–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —è –±—É–¥—É –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∏—Ö –≤–∞–º.\n\n" +
            "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" +
            "/list - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
            "/history_accepted - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç\n" +
            "/history_rejected - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç"
        );
    } else {
        userStates[chatId] = STATES.AWAITING_NAME;
        
        bot.sendMessage(chatId, 
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∞–Ω–∫–µ—Ç –≤ —Ö–∞—É—Å Sunset. " +
            "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã.\n\n" +
            "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:");
    }
});

bot.onText(/\/history_accepted/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (!isAdmin(userId)) {
        bot.sendMessage(chatId, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.");
        return;
    }
    
    if (processedForms.accepted.length === 0) {
        bot.sendMessage(chatId, "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç –ø—É—Å—Ç–∞.");
        return;
    }
    
    let message = `üìã –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç (${processedForms.accepted.length}):\n\n`;
    
    for (const form of processedForms.accepted) {
        message += `üë§ @${form.username} (ID: ${form.userId})\n`;
        message += `üìù –ò–º—è –∏ –Ω–∏–∫: ${form.formData.name}\n`;
        message += `üîπ –ü—Ä–∏–Ω—è—Ç–∞ –∞–¥–º–∏–Ω–æ–º: @${form.adminUsername} (ID: ${form.adminId})\n`;
        message += `üïí –î–∞—Ç–∞: ${form.date}\n\n`;
    }
    
    bot.sendMessage(chatId, message);
});

bot.onText(/\/history_rejected/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (!isAdmin(userId)) {
        bot.sendMessage(chatId, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.");
        return;
    }
    
    if (processedForms.rejected.length === 0) {
        bot.sendMessage(chatId, "–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç –ø—É—Å—Ç–∞.");
        return;
    }
    
    let message = `üìã –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç (${processedForms.rejected.length}):\n\n`;
    
    for (const form of processedForms.rejected) {
        message += `üë§ @${form.username} (ID: ${form.userId})\n`;
        message += `üìù –ò–º—è –∏ –Ω–∏–∫: ${form.formData.name}\n`;
        message += `üîπ –û—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º: @${form.adminUsername} (ID: ${form.adminId})\n`;
        message += `üïí –î–∞—Ç–∞: ${form.date}\n\n`;
    }
    
    bot.sendMessage(chatId, message);
});

bot.onText(/\/list/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (!isAdmin(userId)) {
        bot.sendMessage(chatId, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.");
        return;
    }
    
    const pendingFormsCount = Object.keys(pendingForms).length;
    
    if (pendingFormsCount === 0) {
        bot.sendMessage(chatId, "–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç.");
        return;
    }
    
    let message = `üìã –°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç (${pendingFormsCount}):\n\n`;
    
    for (const [userId, formData] of Object.entries(pendingForms)) {
        const username = formData.userData.username;
        const form = formData.userData.form;
        
        message += `üë§ @${username} (ID: ${userId})\n`;
        message += `üìù –ò–º—è –∏ –Ω–∏–∫: ${form.name}\n`;
        message += `üîπ –í–æ–∑—Ä–∞—Å—Ç: ${form.age}\n\n`;
    }
    
    message += "–ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—É—é –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /view_[ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è], –Ω–∞–ø—Ä–∏–º–µ—Ä: /view_12345678";
    
    bot.sendMessage(chatId, message);
});

bot.onText(/\/view_(\d+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const targetUserId = match[1];
    
    if (!isAdmin(userId)) {
        bot.sendMessage(chatId, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.");
        return;
    }
    
    if (!pendingForms[targetUserId]) {
        bot.sendMessage(chatId, "–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.");
        return;
    }
    
    const { userData } = pendingForms[targetUserId];
    const username = userData.username;
    const form = userData.form;
    
    const formText = 
    `–ê–ù–ö–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (ID: ${targetUserId}):

–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username}

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}`;
    
    bot.sendMessage(chatId, formText, {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ö–∞—É—Å ‚úÖ', callback_data: `accept_${targetUserId}` },
                    { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${targetUserId}` }
                ]
            ]
        }
    });
});

bot.onText(/\/cancel/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    
    if (isAdmin(userId)) {
        bot.sendMessage(chatId, "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å, –≤—ã - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.");
        return;
    }
    
    userStates[chatId] = STATES.IDLE;
    delete userForms[chatId];
    
    bot.sendMessage(chatId, "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.");
});

bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    const userId = msg.from.id;
    
    if (text && text.startsWith('/')) {
        return;
    }
    
    if (isAdmin(userId)) {
        return;
    }
    
    const currentState = userStates[chatId] || STATES.IDLE;
    
    switch (currentState) {
        case STATES.AWAITING_NAME:
            userForms[chatId].name = text;
            userStates[chatId] = STATES.AWAITING_AGE;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è (–≤–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 12+ –ª–µ—Ç):");
            break;
            
        case STATES.AWAITING_AGE:
            userForms[chatId].age = text;
            userStates[chatId] = STATES.AWAITING_TIMEZONE;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:");
            break;
            
        case STATES.AWAITING_TIMEZONE:
            userForms[chatId].timezone = text;
            userStates[chatId] = STATES.AWAITING_ACTIVITY;
            bot.sendMessage(chatId, "üçÇ –¢—ã –ê–∫—Ç–∏–≤–Ω—ã–π –∏–ª–∏ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫?");
            break;
            
        case STATES.AWAITING_ACTIVITY:
            userForms[chatId].activity = text;
            userStates[chatId] = STATES.AWAITING_WHY_US;
            bot.sendMessage(chatId, "üçÇ –ü–æ—á–µ–º—É —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—à —Ö–∞—É—Å Sunset?");
            break;
            
        case STATES.AWAITING_WHY_US:
            userForms[chatId].why_us = text;
            userStates[chatId] = STATES.AWAITING_MINECRAFT_VERSION;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ –≤–µ—Ä—Å–∏—é Minecraft, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –∏–≥—Ä–∞–µ—à—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1.20.1):");
            break;
            
        case STATES.AWAITING_MINECRAFT_VERSION:
            userForms[chatId].minecraft_version = text;
            userStates[chatId] = STATES.AWAITING_MINECRAFT_TYPE;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Ç–∏–ø Minecraft (Java –∏–ª–∏ Bedrock):");
            break;
            
        case STATES.AWAITING_MINECRAFT_TYPE:
            userForms[chatId].minecraft_type = text;
            userStates[chatId] = STATES.AWAITING_SERVER_ACTIVITY;
            
            const typeLower = text.toLowerCase();
            if (!typeLower.includes('java')) {
                bot.sendMessage(chatId, 
                    "‚ùó –í–Ω–∏–º–∞–Ω–∏–µ! –î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Ö–∞—É—Å Sunset —Ç—Ä–µ–±—É–µ—Ç—Å—è Java-–≤–µ—Ä—Å–∏—è Minecraft.\n" +
                    "–í—ã —É–∫–∞–∑–∞–ª–∏: " + text + ". –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.\n\n" +
                    "–ï—Å–ª–∏ —É –≤–∞—Å –≤—Å–µ-—Ç–∞–∫–∏ Java-–≤–µ—Ä—Å–∏—è, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏–º:");
            }
            
            bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –∞–∫—Ç–∏–≤–µ–Ω/–∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö:");
            break;
            
        case STATES.AWAITING_SERVER_ACTIVITY:
            userForms[chatId].server_activity = text;
            userStates[chatId] = STATES.AWAITING_CHAT_ACTIVITY;
            bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Ç—ã –±—É–¥–µ—à—å –∞–∫—Ç–∏–≤–µ–Ω/–∞–∫—Ç–∏–≤–Ω–∞ –≤ —á–∞—Ç–µ (–Ω–∞—à–∞ –Ω–æ—Ä–º–∞ 150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é):");
            break;
            
        case STATES.AWAITING_CHAT_ACTIVITY:
            userForms[chatId].chat_activity = text;
            userStates[chatId] = STATES.AWAITING_OTHER_HOUSES;
            bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Ç—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö/–∫–æ–º–∞–Ω–¥–∞—Ö:");
            break;
            
        case STATES.AWAITING_OTHER_HOUSES:
            userForms[chatId].other_houses = text;
            userStates[chatId] = STATES.AWAITING_CONFIRMATION;
            
            const ageStr = userForms[chatId].age.toLowerCase();
            let meetsAgeRequirement = false;
            let meetsJavaRequirement = false;
            
            const ageMatch = ageStr.match(/(\d+)/);
            if (ageMatch && parseInt(ageMatch[1]) >= 12) {
                meetsAgeRequirement = true;
            }
            
            const minecraft_type = userForms[chatId].minecraft_type.toLowerCase();
            if (minecraft_type.includes('java')) {
                meetsJavaRequirement = true;
            }
            
            if (!meetsAgeRequirement || !meetsJavaRequirement) {
                let errorMessage = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:\n\n";
                
                if (!meetsAgeRequirement) {
                    errorMessage += "- –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 12 –ª–µ—Ç –∏–ª–∏ —Å—Ç–∞—Ä—à–µ\n";
                }
                
                if (!meetsJavaRequirement) {
                    errorMessage += "- –¢—Ä–µ–±—É–µ—Ç—Å—è Java-–≤–µ—Ä—Å–∏—è Minecraft\n";
                }
                
                errorMessage += "\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∑–∞–Ω–æ–≤–æ —Å —É—á–µ—Ç–æ–º —ç—Ç–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (/start).";
                
                bot.sendMessage(chatId, errorMessage);
                userStates[chatId] = STATES.IDLE;
                delete userForms[chatId];
                return;
            }
            
            const formText = 
            `–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:

üçÇ –ò–º—è + –ù–∏–∫: ${userForms[chatId].name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${userForms[chatId].age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${userForms[chatId].timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${userForms[chatId].activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${userForms[chatId].why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${userForms[chatId].minecraft_version}
üçÇ –¢–∏–ø: ${userForms[chatId].minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${userForms[chatId].server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${userForms[chatId].chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${userForms[chatId].other_houses}`;
            
            const options = {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ', callback_data: 'confirm' },
                            { text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ ‚ùå', callback_data: 'restart' }
                        ]
                    ]
                }
            };
            
            bot.sendMessage(chatId, formText + "\n\n–í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ?", options);
            break;
    }
});

bot.on('callback_query', async (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;
    const userId = callbackQuery.from.id;
    
    if (data === 'confirm' && userStates[chatId] === STATES.AWAITING_CONFIRMATION) {
        const username = callbackQuery.from.username || "–±–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
        
        const form = userForms[chatId];
        const formText = 
        `–ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê –í –•–ê–£–° SUNSET!

–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username} (ID: ${userId})

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}`;
        
        for (const adminId of ADMIN_IDS) {
            try {
                await bot.sendMessage(adminId, 
                    "üì¨ –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –≤ —Ö–∞—É—Å Sunset!\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç.");
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
            }
        }
        
        for (const adminId of ADMIN_IDS) {
            try {
                const adminMsg = await bot.sendMessage(adminId, formText, {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                { text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ö–∞—É—Å ‚úÖ', callback_data: `accept_${userId}` },
                                { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${userId}` }
                            ]
                        ]
                    }
                });
                
                if (!pendingForms[userId]) {
                    pendingForms[userId] = {
                        adminMessages: {},
                        userData: {
                            username,
                            form
                        }
                    };
                }
                
                pendingForms[userId].adminMessages[adminId] = {
                    chat_id: adminId,
                    message_id: adminMsg.message_id
                };
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
            }
        }
        
        const options = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–∞—Ç—É Sunset', url: GROUP_LINK }]
                ]
            }
        };
        
        bot.editMessageText(
            "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º.\n\n" +
            "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –≤ –Ω–∞—à —á–∞—Ç–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ! –ë–µ–∑ –∑–∞—è–≤–∫–∏ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.", 
            {
                chat_id: chatId,
                message_id: callbackQuery.message.message_id,
                reply_markup: options.reply_markup
            }
        );
        
        userStates[chatId] = STATES.IDLE;
        
        if (pendingForms[userId]) {
            pendingForms[userId].userChatId = chatId;
        }
    } 
    else if (data === 'restart') {
        userStates[chatId] = STATES.AWAITING_NAME;
        userForms[chatId] = {};
        
        bot.editMessageText(
            "–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:", 
            {
                chat_id: chatId,
                message_id: callbackQuery.message.message_id
            }
        );
    }
    else if (data.startsWith('accept_')) {
        const targetUserId = data.split('_')[1];
        const adminId = callbackQuery.from.id;
        const adminUsername = callbackQuery.from.username || `ID: ${adminId}`;
        
        if (!isAdmin(adminId)) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è" });
            return;
        }
        
        if (!pendingForms[targetUserId]) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–≠—Ç–∞ –∞–Ω–∫–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" });
            return;
        }
        
        try {
            const { userData, adminMessages, userChatId } = pendingForms[targetUserId];
            const username = userData.username;
            
            processedForms.accepted.push({
                userId: targetUserId,
                username: username,
                formData: userData.form,
                adminId: adminId,
                adminUsername: adminUsername,
                date: new Date().toLocaleString('ru-RU')
            });
            
            for (const [id, msgData] of Object.entries(adminMessages)) {
                try {
                    await bot.editMessageText(
                        `‚úÖ –ê–ù–ö–ï–¢–ê –ü–†–ò–ù–Ø–¢–ê ‚úÖ\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} (ID: ${targetUserId}) –±—ã–ª –ø—Ä–∏–Ω—è—Ç –≤ —Ö–∞—É—Å –∞–¥–º–∏–Ω–æ–º @${adminUsername} (ID: ${adminId})`,
                        {
                            chat_id: msgData.chat_id,
                            message_id: msgData.message_id
                        }
                    );
                } catch (error) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∞–¥–º–∏–Ω–∞ ${id}: ${error}`);
                }
            }
            
            if (userChatId) {
                bot.sendMessage(
                    userChatId,
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∞–¥–º–∏–Ω–æ–º @" + adminUsername + "! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ö–∞—É—Å Sunset! üéâ"
                );
            }
            
            try {
                if (!BOT_ID) {
                    const botInfo = await bot.getMe();
                    BOT_ID = botInfo.id;
                    console.log(`ID –±–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω: ${BOT_ID}`);
                }
                
                const chatAdmins = await bot.getChatAdministrators(GROUP_CHAT_ID);
                if (chatAdmins.some(admin => admin.user.id === BOT_ID)) {
                    await bot.approveChatJoinRequest(GROUP_CHAT_ID, targetUserId);
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                    
                    bot.answerCallbackQuery(callbackQuery.id, { 
                        text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç –≤ —Ö–∞—É—Å Sunset! –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.", 
                        show_alert: true 
                    });
                } else {
                    bot.sendMessage(
                        chatId,
                        `‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ.\n` +
                        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã —Å –ø—Ä–∞–≤–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, ` +
                        `—á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏.`
                    );
                    
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                    
                    bot.answerCallbackQuery(callbackQuery.id, { 
                        text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç, –Ω–æ –∑–∞—è–≤–∫—É –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –≤—Ä—É—á–Ω—É—é. –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", 
                        show_alert: true 
                    });
                }
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É: ${error}`);
                
                try {
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                } catch (chatError) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç: ${chatError}`);
                }
                
                bot.sendMessage(
                    chatId,
                    `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏: ${error.message}\n` +
                    `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram.`
                );
                
                bot.answerCallbackQuery(callbackQuery.id, { 
                    text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É –≤—Ä—É—á–Ω—É—é.", 
                    show_alert: true 
                });
            }
            
            delete pendingForms[targetUserId];
            
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∞–Ω–∫–µ—Ç—ã: ${error}`);
            
            bot.answerCallbackQuery(callbackQuery.id, { 
                text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∞–Ω–∫–µ—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                show_alert: true
            });
        }
    }
    else if (data.startsWith('reject_')) {
        const targetUserId = data.split('_')[1];
        const adminId = callbackQuery.from.id;
        const adminUsername = callbackQuery.from.username || `ID: ${adminId}`;
        
        if (!isAdmin(adminId)) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è" });
            return;
        }
        
        if (!pendingForms[targetUserId]) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–≠—Ç–∞ –∞–Ω–∫–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" });
            return;
        }
        
        const { userData, adminMessages, userChatId } = pendingForms[targetUserId];
        const username = userData.username;
        
        processedForms.rejected.push({
            userId: targetUserId,
            username: username,
            formData: userData.form,
            adminId: adminId,
            adminUsername: adminUsername,
            date: new Date().toLocaleString('ru-RU')
        });
        
        for (const [id, msgData] of Object.entries(adminMessages)) {
            try {
                await bot.editMessageText(
                    `‚ùå –ê–ù–ö–ï–¢–ê –û–¢–ö–õ–û–ù–ï–ù–ê ‚ùå\n\n–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} (ID: ${targetUserId}) –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º @${adminUsername} (ID: ${adminId})`,
                    {
                        chat_id: msgData.chat_id,
                        message_id: msgData.message_id
                    }
                );
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∞–¥–º–∏–Ω–∞ ${id}: ${error}`);
            }
        }
        
        if (userChatId) {
            bot.sendMessage(
                userChatId,
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º @" + adminUsername + ". –¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            );
        }
        
        try {
            await bot.declineChatJoinRequest(GROUP_CHAT_ID, targetUserId);
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç: ${error}`);
        }
        
        delete pendingForms[targetUserId];
        
        bot.answerCallbackQuery(callbackQuery.id, { text: "–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞" });
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è webhook
function handleTextMessage(chatId, text, userId) {
    if (!text || text.startsWith('/')) {
        return;
    }
    
    switch (userStates[chatId]) {
        case STATES.AWAITING_NAME:
            userForms[chatId].name = text;
            userStates[chatId] = STATES.AWAITING_AGE;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:");
            break;
            
        case STATES.AWAITING_AGE:
            if (text.includes('11') || text.includes('10') || text.includes('9') || text.includes('8')) {
                bot.sendMessage(chatId, 
                    "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ –Ω–∞—à —Ö–∞—É—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ –æ—Ç 12 –ª–µ—Ç. " +
                    "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –∫–æ–≥–¥–∞ –ø–æ–¥—Ä–∞—Å—Ç–µ—à—å!"
                );
                userStates[chatId] = STATES.IDLE;
                delete userForms[chatId];
                return;
            }
            
            userForms[chatId].age = text;
            userStates[chatId] = STATES.AWAITING_TIMEZONE;
            bot.sendMessage(chatId, "üçÇ –£–∫–∞–∂–∏ —Å–≤–æ–π –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–°–ö, –ú–°–ö+1 –∏ —Ç.–¥.):");
            break;
            
        case STATES.AWAITING_TIMEZONE:
            userForms[chatId].timezone = text;
            userStates[chatId] = STATES.AWAITING_ACTIVITY;
            bot.sendMessage(chatId, "üçÇ –ö–∞–∫–æ–π —É —Ç–µ–±—è –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤ (–∫–æ–≥–¥–∞ –æ–±—ã—á–Ω–æ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –∏–≥—Ä–µ):");
            break;
            
        case STATES.AWAITING_ACTIVITY:
            userForms[chatId].activity = text;
            userStates[chatId] = STATES.AWAITING_WHY_US;
            bot.sendMessage(chatId, "üçÇ –ü–æ—á–µ–º—É —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å:");
            break;
            
        case STATES.AWAITING_WHY_US:
            userForms[chatId].why_us = text;
            userStates[chatId] = STATES.AWAITING_MINECRAFT_VERSION;
            bot.sendMessage(chatId, "What version of Minecraft do you play?");
            break;
            
        case STATES.AWAITING_MINECRAFT_VERSION:
            userForms[chatId].minecraft_version = text;
            userStates[chatId] = STATES.AWAITING_MINECRAFT_TYPE;
            bot.sendMessage(chatId, "What type of Minecraft do you play? (Java or Bedrock)");
            break;
            
        case STATES.AWAITING_MINECRAFT_TYPE:
            userForms[chatId].minecraft_type = text;
            
            if (text.toLowerCase().includes('bedrock')) {
                bot.sendMessage(chatId, 
                    "‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ –Ω–∞—à —Ö–∞—É—Å –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ Java-–≤–µ—Ä—Å–∏–∏. " +
                    "–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–π–¥–µ—à—å –Ω–∞ Java-–≤–µ—Ä—Å–∏—é Minecraft!"
                );
                userStates[chatId] = STATES.IDLE;
                delete userForms[chatId];
                return;
            }
            
            userStates[chatId] = STATES.AWAITING_SERVER_ACTIVITY;
            bot.sendMessage(chatId, "üçÇ –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö:");
            break;
            
        case STATES.AWAITING_SERVER_ACTIVITY:
            userForms[chatId].server_activity = text;
            userStates[chatId] = STATES.AWAITING_CHAT_ACTIVITY;
            bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Å–æ–≥–ª–∞—Å–µ–Ω(–Ω–∞) –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º(–æ–π) –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é):");
            break;
            
        case STATES.AWAITING_CHAT_ACTIVITY:
            userForms[chatId].chat_activity = text;
            userStates[chatId] = STATES.AWAITING_OTHER_HOUSES;
            bot.sendMessage(chatId, "üçÇ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö:");
            break;
            
        case STATES.AWAITING_OTHER_HOUSES:
            userForms[chatId].other_houses = text;
            userStates[chatId] = STATES.AWAITING_CONFIRMATION;
            
            const form = userForms[chatId];
            const formText = 
            `–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}

–í—Å—ë –≤–µ—Ä–Ω–æ? –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ?`;
            
            const options = {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: '–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úÖ', callback_data: 'confirm' },
                            { text: '–ù–µ—Ç, –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ ‚ùå', callback_data: 'restart' }
                        ]
                    ]
                }
            };
            
            bot.sendMessage(chatId, formText, options);
            break;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–Ω–æ–ø–æ–∫) –¥–ª—è webhook
async function handleCallbackQuery(callbackQuery) {
    const chatId = callbackQuery.message.chat.id;
    const data = callbackQuery.data;
    const userId = callbackQuery.from.id;
    
    if (data === 'confirm' && userStates[chatId] === STATES.AWAITING_CONFIRMATION) {
        const username = callbackQuery.from.username || "–±–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
        
        const form = userForms[chatId];
        const formText = 
        `–ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê –í –•–ê–£–° SUNSET!

–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @${username} (ID: ${userId})

üçÇ –ò–º—è + –ù–∏–∫: ${form.name}
üçÇ –í–æ–∑—Ä–∞—Å—Ç + –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${form.age}
üçÇ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${form.timezone}
üçÇ –ê–∫—Ç–∏–≤/–ù–µ–∞–∫—Ç–∏–≤: ${form.activity}
üçÇ –ü–æ—á–µ–º—É –≤—ã–±—Ä–∞–ª(–∞) –∏–º–µ–Ω–Ω–æ –Ω–∞—Å: ${form.why_us}
üçÇ –í–µ—Ä—Å–∏—è Minecraft: ${form.minecraft_version}
üçÇ –¢–∏–ø: ${form.minecraft_type}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤ —Å—ä—ë–º–∫–∞—Ö: ${form.server_activity}
üçÇ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–µ (150-200 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –Ω–µ–¥–µ–ª—é): ${form.chat_activity}
üçÇ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: ${form.other_houses}`;
        
        for (const adminId of ADMIN_IDS) {
            try {
                await bot.sendMessage(adminId, 
                    "üì¨ –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –≤ —Ö–∞—É—Å Sunset!\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–µ–ø—Ä–∏–Ω—è—Ç—ã—Ö –∞–Ω–∫–µ—Ç.");
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
            }
        }
        
        for (const adminId of ADMIN_IDS) {
            try {
                const adminMsg = await bot.sendMessage(adminId, formText, {
                    reply_markup: {
                        inline_keyboard: [
                            [
                                { text: '–ü—Ä–∏–Ω—è—Ç—å –≤ —Ö–∞—É—Å ‚úÖ', callback_data: `accept_${userId}` },
                                { text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå', callback_data: `reject_${userId}` }
                            ]
                        ]
                    }
                });
                
                if (!pendingForms[userId]) {
                    pendingForms[userId] = {
                        adminMessages: {},
                        userData: {
                            username,
                            form
                        }
                    };
                }
                
                pendingForms[userId].adminMessages[adminId] = {
                    chat_id: adminId,
                    message_id: adminMsg.message_id
                };
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã –∞–¥–º–∏–Ω—É ${adminId}: ${error}`);
            }
        }
        
        const options = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–∞—Ç—É Sunset', url: GROUP_LINK }]
                ]
            }
        };
        
        bot.editMessageText(
            "–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º.\n\n" +
            "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç–ø—Ä–∞–≤—å –∑–∞—è–≤–∫—É –≤ –Ω–∞—à —á–∞—Ç–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ! –ë–µ–∑ –∑–∞—è–≤–∫–∏ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.", 
            {
                chat_id: chatId,
                message_id: callbackQuery.message.message_id,
                reply_markup: options.reply_markup
            }
        );
        
        userStates[chatId] = STATES.IDLE;
        
        if (pendingForms[userId]) {
            pendingForms[userId].userChatId = chatId;
        }
    } 
    else if (data === 'restart') {
        userStates[chatId] = STATES.AWAITING_NAME;
        userForms[chatId] = {};
        
        bot.editMessageText(
            "–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ—ë –ò–º—è + –ù–∏–∫:", 
            {
                chat_id: chatId,
                message_id: callbackQuery.message.message_id
            }
        );
    }
    else if (data.startsWith('accept_')) {
        const targetUserId = data.split('_')[1];
        const adminId = callbackQuery.from.id;
        const adminUsername = callbackQuery.from.username || `ID: ${adminId}`;
        
        if (!isAdmin(adminId)) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è" });
            return;
        }
        
        if (!pendingForms[targetUserId]) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–≠—Ç–∞ –∞–Ω–∫–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" });
            return;
        }
        
        try {
            const { userData, adminMessages, userChatId } = pendingForms[targetUserId];
            const username = userData.username;
            
            processedForms.accepted.push({
                userId: targetUserId,
                username: username,
                formData: userData.form,
                adminId: adminId,
                adminUsername: adminUsername,
                date: new Date().toLocaleString('ru-RU')
            });
            
            for (const [id, msgData] of Object.entries(adminMessages)) {
                try {
                    await bot.editMessageText(
                        `‚úÖ –ê–ù–ö–ï–¢–ê –ü–†–ò–ù–Ø–¢–ê ‚úÖ\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} (ID: ${targetUserId}) –±—ã–ª –ø—Ä–∏–Ω—è—Ç –≤ —Ö–∞—É—Å –∞–¥–º–∏–Ω–æ–º @${adminUsername} (ID: ${adminId})`,
                        {
                            chat_id: msgData.chat_id,
                            message_id: msgData.message_id
                        }
                    );
                } catch (error) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∞–¥–º–∏–Ω–∞ ${id}: ${error}`);
                }
            }
            
            if (userChatId) {
                bot.sendMessage(
                    userChatId,
                    "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∞–¥–º–∏–Ω–æ–º @" + adminUsername + "! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ö–∞—É—Å Sunset! üéâ"
                );
            }
            
            try {
                if (!BOT_ID) {
                    const botInfo = await bot.getMe();
                    BOT_ID = botInfo.id;
                    console.log(`ID –±–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω: ${BOT_ID}`);
                }
                
                const chatAdmins = await bot.getChatAdministrators(GROUP_CHAT_ID);
                if (chatAdmins.some(admin => admin.user.id === BOT_ID)) {
                    await bot.approveChatJoinRequest(GROUP_CHAT_ID, targetUserId);
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                    
                    bot.answerCallbackQuery(callbackQuery.id, { 
                        text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç –≤ —Ö–∞—É—Å Sunset! –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.", 
                        show_alert: true 
                    });
                } else {
                    bot.sendMessage(
                        chatId,
                        `‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ.\n` +
                        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã —Å –ø—Ä–∞–≤–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, ` +
                        `—á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏.`
                    );
                    
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                    
                    bot.answerCallbackQuery(callbackQuery.id, { 
                        text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç, –Ω–æ –∑–∞—è–≤–∫—É –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å –≤—Ä—É—á–Ω—É—é. –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", 
                        show_alert: true 
                    });
                }
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É: ${error}`);
                
                try {
                    await bot.sendMessage(
                        GROUP_CHAT_ID,
                        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @${username} —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤ —Ö–∞—É—Å Sunset! üéâ\n–ü—Ä–∏–Ω—è—Ç –∞–¥–º–∏–Ω–æ–º: @${adminUsername} (ID: ${adminId})`
                    );
                } catch (chatError) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç: ${chatError}`);
                }
                
                bot.sendMessage(
                    chatId,
                    `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏: ${error.message}\n` +
                    `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram.`
                );
                
                bot.answerCallbackQuery(callbackQuery.id, { 
                    text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏—Ç–µ –∑–∞—è–≤–∫—É –≤—Ä—É—á–Ω—É—é.", 
                    show_alert: true 
                });
            }
            
            delete pendingForms[targetUserId];
            
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∞–Ω–∫–µ—Ç—ã: ${error}`);
            
            bot.answerCallbackQuery(callbackQuery.id, { 
                text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∞–Ω–∫–µ—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                show_alert: true
            });
        }
    }
    else if (data.startsWith('reject_')) {
        const targetUserId = data.split('_')[1];
        const adminId = callbackQuery.from.id;
        const adminUsername = callbackQuery.from.username || `ID: ${adminId}`;
        
        if (!isAdmin(adminId)) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è" });
            return;
        }
        
        if (!pendingForms[targetUserId]) {
            bot.answerCallbackQuery(callbackQuery.id, { text: "–≠—Ç–∞ –∞–Ω–∫–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" });
            return;
        }
        
        const { userData, adminMessages, userChatId } = pendingForms[targetUserId];
        const username = userData.username;
        
        processedForms.rejected.push({
            userId: targetUserId,
            username: username,
            formData: userData.form,
            adminId: adminId,
            adminUsername: adminUsername,
            date: new Date().toLocaleString('ru-RU')
        });
        
        for (const [id, msgData] of Object.entries(adminMessages)) {
            try {
                await bot.editMessageText(
                    `‚ùå –ê–ù–ö–ï–¢–ê –û–¢–ö–õ–û–ù–ï–ù–ê ‚ùå\n\n–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${username} (ID: ${targetUserId}) –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º @${adminUsername} (ID: ${adminId})`,
                    {
                        chat_id: msgData.chat_id,
                        message_id: msgData.message_id
                    }
                );
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –∞–¥–º–∏–Ω–∞ ${id}: ${error}`);
            }
        }
        
        if (userChatId) {
            bot.sendMessage(
                userChatId,
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º @" + adminUsername + ". –¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            );
        }
        
        try {
            await bot.declineChatJoinRequest(GROUP_CHAT_ID, targetUserId);
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç: ${error}`);
        }
        
        delete pendingForms[targetUserId];
        
        bot.answerCallbackQuery(callbackQuery.id, { text: "–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞" });
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–æ—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ webhook
module.exports = {
    bot,
    ADMIN_IDS,
    GROUP_CHAT_ID, 
    GROUP_LINK,
    userStates,
    userForms,
    pendingForms,
    processedForms,
    STATES,
    isAdmin,
    handleTextMessage,
    handleCallbackQuery
};

// –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é (–Ω–µ —á–µ—Ä–µ–∑ require), —Å–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
if (require.main === module) {
    process.on('unhandledRejection', (reason, promise) => {
        console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ Promise:', reason);
    });

    process.on('SIGINT', () => {
        console.log('–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });

    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.');
} 